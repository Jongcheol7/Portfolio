<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="userMapper">
	<select id="checkId" resultType="int" parameterType="String">
		select count(*) from user 
		where userId = #{userId}
	</select>
	<select id="checkNickName" resultType="int" parameterType="String">
		select count(*) from user 
		where nickName = #{nickName}
	</select>
	<select id="checkEmail" resultType="int" parameterType="String">
		select count(*) from user 
		where email = #{email}
	</select>
	<select id="checkPhone" resultType="int" parameterType="String">
		select count(*) from user 
		where phone = #{phone}
	</select>
	
	<insert id="register" parameterType="com.englishweb.vo.UserVO">
		insert into user(userId,userPw,userName,nickName,birth,email,gender,phone)  
		values(#{userId},#{userPw},#{userName},#{nickName},#{birth},#{email},#{gender},#{phone})
	</insert>
	
	<!-- 로그인 -->
	<select id="login" resultType="int" parameterType="com.englishweb.vo.UserVO">
		select count(*) from user 
		where #{userPw} = ( select userPw from user 
						where userId=#{userId})
	</select>
	
	<select id="selectOne" resultType="com.englishweb.vo.UserVO">
		select * from user 
		where userId = #{userId}
	</select>
	
	<!-- 회원 비밀번호 변경 -->
	<update id="changePw">
		update user set userPw = #{userPw} 
		where userId = #{userId}
	</update>
	
	<!-- 아이디 찾기 (이름과 이메일이 맞는지 확인 -->
	<select id="checkNameEmail" parameterType="hashmap" resultType="int">
		select count(*) 
		from user 
		where userName = #{userName} and email = #{email}
	</select>
	<!-- 이메일로 아이디 찾기 -->
	<select id="findByEmail" parameterType="String" resultType="String">
		select userId 
		from user 
		where email = #{email}
	</select>
	<!-- 아이디 찾기 (이름, 이메일, 아이디로 회원이 맞는지 확인 -->
	<select id="checkNameEmailId" parameterType="hashmap" resultType="int">
		select count(*) 
		from user 
		where userName = #{userName} and email = #{email} and userId = #{userId}
	</select>
	
	<!-- 임시비밀번호로 바꿔주기-->
	<update id="changeTempPw" parameterType="hashmap">
		update user set userPw = #{tempPw} 
		where email = #{email}
	</update>
	 
</mapper>