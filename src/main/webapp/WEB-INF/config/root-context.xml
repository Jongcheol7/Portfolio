<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
   xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc
                  http://www.springframework.org/schema/mvc/spring-mvc.xsd
                  http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/context
                  http://www.springframework.org/schema/context/spring-context.xsd
                  http://www.springframework.org/schema/tx
                  http://www.springframework.org/schema/tx/spring-tx.xsd
                  http://www.springframework.org/schema/aop
                  http://www.springframework.org/schema/aop/spring-aop.xsd">

						
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>/WEB-INF/properties/db.properties</beans:value>
		</beans:property>
	</beans:bean>
	
	<beans:bean class="org.apache.commons.dbcp2.BasicDataSource" id="basicDataSource">
		<beans:property name="driverClassName" value="${db.classname}"/>
		<beans:property name="url" value="${db.url}"/>
		<beans:property name="username" value="${db.username}"/>
		<beans:property name="password" value="${db.password}"/>
	</beans:bean>
	
	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSession">
		<beans:property name="dataSource" ref="basicDataSource"/>
		<beans:property name="mapperLocations" value="/WEB-INF/mapper/*.xml"/>
	</beans:bean>
	
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSession"/>
	</beans:bean>
	
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="basicDataSource"/>
	</beans:bean>
	<beans:bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager"/>
	</beans:bean>
	
	<!-- 3번째 방법 이것도 맨위가 선언 되있어야 한다-->
	<!-- aop로 트랜잭션 주는 방식 -->
	<!-- 이건 서블릿컨텍스트에 넣어야한다. 여기에는 작동 안됨 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="txData*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution( * kr.co..*.*(..))" id="firstTransactionMethod"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="firstTransactionMethod"/>
	</aop:config>-->

</beans:beans>











